---
// src/layouts/BaseLayout.astro (または他の .astro ファイル)
import BaseLayout from "../layouts/BaseLayout.astro"; // あなたのプロジェクトのベースレイアウトに合わせてください
import animationsUrl from "../scripts/animations.ts?url";   // ビルド時にハッシュ付き URL へ展開
---
<BaseLayout>
    <style>
        :root {
          --bg: #000;        /* 背景は完全な黒に固定          */
          --lav: #e6e6fa;    /* 前景色（ラベンダー）           */
        }
      
        html, body {
          margin: 0;
          padding: 0;
          width: 100%;
          height: 100%;
          background: var(--bg);
          color: var(--lav);
          overflow-y: scroll;
          scroll-snap-type: y mandatory;
          font-family: system-ui, sans-serif;
        }
      
        .section {
          width: 100%;
          height: 100vh;
          scroll-snap-align: start;
          position: relative;
          display: flex;
          justify-content: center;
          align-items: center;
          overflow: hidden;
        }
      
        /* ───────── Scene-1 : Cube Grid ───────── */
        .cube-grid {
          position: relative;
          width: 360px;
          height: 360px;
          perspective: 900px;
          transform-style: preserve-3d;          /* 追加: 3D 子要素を保持             */
          /* 追加: 斜め方向へ軽く傾けて立体感を確保（回転は JS と競合しない） */
          transform: rotateX(-24deg) rotateY(32deg);
        }
      
        .cube {
          position: absolute;
          width: 52px;
          height: 52px;
          background: var(--lav);
          outline: 2px solid #fff;
          box-shadow: 0 0 14px 4px #00ffff inset;
          transform-style: preserve-3d;
          transform: translate3d(var(--tx), var(--ty), var(--tz))
                     rotateX(45deg) rotateY(45deg) scale(1);
          opacity: 1;
          backface-visibility: hidden;          /* 追加: 裏面のチラつきを抑制        */
        }
      
        /* ───────── Scene-2 : Particle Burst ───────── */
        #particleCanvas {
          position: absolute;
          inset: 0;
          width: 100%;
          height: 100%;
          background: transparent;
          mix-blend-mode: screen;
        }
      
        /* ───────── Scene-3 : Wave Mesh ───────── */
        #waveCanvas {
          position: absolute;
          inset: 0;
          width: 100%;
          height: 100%;
        }
      
        /* ───────── Scene-4 : Dot Sphere ───────── */
        #sphereContainer {
          position: relative;
          width: 400px;
          height: 400px;
          transform-style: preserve-3d;
          perspective: 800px;
          /* 追加: 初期角度を付けて奥行きを出しておく */
          transform: rotateX(-20deg) rotateY(-10deg);
        }
      
        .dot {
          position: absolute;
          width: 10px;       /* わずかに拡大して視認性アップ   */
          height: 10px;
          border-radius: 50%;
          background: var(--lav);
          opacity: 1;
        }
      </style>
      
  <!-- 4 つのセクション -->
  <section class="section" data-label="Scene 1 - Cube">
    <div class="cube-grid"></div> <!-- Scene 1 のコンテナ -->
  </section>
  <section class="section" data-label="Scene 2 - Particle">
    <canvas id="particleCanvas"></canvas> <!-- Scene 2 の Canvas -->
  </section>
  <section class="section" data-label="Scene 3 - Wave">
    <canvas id="waveCanvas"></canvas> <!-- Scene 3 の Canvas -->
  </section>
  <section class="section" data-label="Scene 4 - Sphere">
    <div id="sphereContainer"></div> <!-- Scene 4 のコンテナ -->
  </section>

  <!-- アニメーションコード（ハッシュ付き JS）を defer 読込 -->
  <script type="module" defer src={animationsUrl}></script>

</BaseLayout>