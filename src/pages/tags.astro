---
import BaseLayout from '../layouts/BaseLayout.astro';

interface BlogPost {
  frontmatter: {
    tags?: string[];
    title: string;
    date: string;
  };
  url: string;
}

// すべての .md/.mdx 記事をビルド時に読み込む
let allPosts: BlogPost[] = [];
try {
  const postFiles = await import.meta.glob('../../src/pages/blog/*.{md,mdx}', { eager: true });
  console.log('Found post files:', Object.keys(postFiles));
  allPosts = Object.values(postFiles) as BlogPost[];
  console.log('Loaded posts:', allPosts.map(p => p.frontmatter.title));
} catch (error) {
  console.error('Error loading posts:', error);
}
// タグとその記事数を集計
const tagCounts: Record<string, number> = {};
allPosts.forEach((post: BlogPost) => {
  post.frontmatter.tags?.forEach((tag: string) => {
    tagCounts[tag] = (tagCounts[tag] || 0) + 1;
  });
});

// タグをアルファベット順にソート
const sortedTags = Object.keys(tagCounts).sort();
---

<BaseLayout>
  <main class="pt-24 container mx-auto px-6 py-8">
    <h1 class="text-3xl font-bold text-white mb-6">すべてのタグ</h1>
    
    {sortedTags.length > 0 ? (
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {sortedTags.map((tag) => (
          <a 
            href={`/tags/${tag}`}
            class="block p-4 bg-gray-800 rounded-lg hover:bg-gray-700 transition-colors"
          >
            <h2 class="text-xl font-semibold text-white">{tag}</h2>
            <p class="text-gray-400">{tagCounts[tag]} 記事</p>
          </a>
        ))}
      </div>
    ) : (
      <div class="bg-gray-800 p-6 rounded-lg">
        <p class="text-gray-400">タグ付けされた記事が見つかりませんでした</p>
        <p class="mt-2">
          <a href="/blog/" class="text-blue-300 hover:underline">ブログ記事を確認する</a>
        </p>
      </div>
    )}

    <p class="mt-6">
      <a href="/blog/" class="text-gray-400 hover:text-white">← Back to Blog</a>
    </p>
  </main>
</BaseLayout>
