---
// src/pages/index.astro
import BaseLayout from '../layouts/BaseLayout.astro';
import {
  ArrowRight,
  Users,
  RefreshCcw,
  Maximize2,
  Minimize2
} from 'lucide-react';

/** ---------- Featured Projects ------------------------------- **/
export interface Project {
  title: string;
  description: string;
  progress: number;
}

export const projects: Project[] = [
  { title: 'PKM 2025 by Mekann', description: '知的活動を加速するための次世代 PKM 理論と実践体系。Obsidianを基盤に、多層思考・知識可視化を探求。', progress: 60 },
  { title: 'PKM 日本コミュニティ', description: '知的活動と自己変革を支援する PKM 日本拠点。次世代型知識基盤を共に探求。', progress: 50 },
  { title: 'mdtex Plugin', description: 'Markdown文中に LaTeXを滑らかに統合。Obsidian内で数式・構造化表現を強化する支援プラグイン。', progress: 90 },
  { title: 'Divergences Theme', description: '美しい階調と知的静謐を両立させた、Obsidian専用カスタムダークテーマ。', progress: 95 },
  { title: 'Google Calendar Tasks Sync', description: 'ObsidianタスクとGoogleカレンダーをリアルタイム同期し、日常知的生産性を最大化。', progress: 85 },
  { title: 'Next Cornell Note Plugin', description: 'フェーズ切替UIで学習・思考フェーズを支援する、デジタル最適化版コーネルノートプラグイン。', progress: 95 },
  { title: 'Footnote-Driven Cornell Plugin', description: '脚注をCue化し、想起・要約・レビューを統合する次世代型コーネルノート支援プラグイン。', progress: 90 },
  { title: 'OmniWiki Plugin', description: 'ノート内の専門用語を即時抽出し、Grok連携で知識探索を滑らかに進める知的支援プラグイン。', progress: 90 }
];
---

<BaseLayout title="Home" description="Mekann | Intelligent Systems & AI-Driven Knowledge">
  <!-- Navigation -->
  <header class="fixed inset-x-0 top-0 z-50 bg-black border-b border-white/10">
    <nav class="max-w-7xl mx-auto flex items-center justify-between py-5 px-6">
      <span class="text-white font-semibold text-lg">Mekann</span>
      <ul class="flex gap-8 text-sm">
        <li><a href="/#about"    class="text-gray-500 hover:text-white transition">About</a></li>
        <li><a href="/#projects" class="text-gray-500 hover:text-white transition">Projects</a></li>
        <li><a href="/#contact"  class="text-gray-500 hover:text-white transition">Contact</a></li>
      </ul>
    </nav>
  </header>

  <main class="pt-24">
    <!-- Hero -->
    <section class="flex items-center justify-center bg-black text-white min-h-screen px-6">
      <div class="text-center space-y-6 max-w-3xl">
        <h1 class="text-[8vw] leading-none font-extrabold tracking-tight">
          Intelligent Systems ×<br />AI-Driven Knowledge
        </h1>
        <p class="mt-6 text-lg text-gray-400 leading-relaxed">
          AIを核に、知識の構造と思考のプロセスを再設計する。<br />
          次世代の知能情報基盤を探究します。
        </p>
        <div class="mt-8 flex justify-center gap-4">
          <a href="https://note.com/mekann" target="_blank" rel="noopener" class="btn-primary whitespace-nowrap">
            note <ArrowRight className="inline w-4 h-4 ml-1" />
          </a>
          <a href="https://github.com/Mekann2904" target="_blank" rel="noopener" class="btn-secondary whitespace-nowrap">
            GitHub
          </a>
        </div>
      </div>
    </section>

    <!-- About + Graph -->
    <section id="about" class="bg-black text-white py-20">
      <div class="container mx-auto px-6 grid gap-12 lg:grid-cols-2">
        <!-- 左カラム -->
        <div class="space-y-6">
          <h2 class="text-3xl font-bold">Profile &amp; Vision</h2>
          <p class="text-gray-400 max-w-xl leading-snug">
            Visualizing knowledge in Obsidian. 知を可視化し、PKMの本質を探る。<br />
            LLMs・多層レイヤー・思考発話駆動思考｜Python・TypeScript
          </p>

          <div class="community-card max-w-md flex items-start gap-4">
            <Users className="w-10 h-10 text-blue-400 flex-shrink-0" />
            <div>
              <h3 class="text-xl font-semibold">PKM 日本コミュニティ</h3>
              <p class="mt-1 text-gray-400 leading-snug">
                知的活動と自己変革を支援するPKM日本拠点。次世代型知識基盤を共に探求。
              </p>
              <a href="https://x.com/i/communities/1906293158838935873" target="_blank" rel="noopener"
                 class="mt-2 inline-block text-blue-400 hover:text-blue-300 transition">
                コミュニティを訪問 →
              </a>
            </div>
          </div>
        </div>

        <!-- 右カラム：グラフ -->
        <div class="relative aspect-[16/9]">
          <div id="network" class="skill-cloud"></div>
          <div class="absolute top-4 right-4 flex space-x-2">
            <button id="reload-btn"  aria-label="Reload"           class="icon-btn"><RefreshCcw className="w-4 h-4" /></button>
            <button id="toggle-btn"  aria-label="Toggle fullscreen" class="icon-btn">
              <Maximize2 id="icon-max" className="w-4 h-4" />
              <Minimize2 id="icon-min" className="w-4 h-4 hidden" />
            </button>
          </div>
        </div>
      </div>
    </section>

    <!-- Projects -->
    <section id="projects" class="bg-black py-20">
      <div class="container mx-auto px-6">
        <h2 class="text-3xl font-bold text-center text-white mb-12">Featured Projects</h2>
        <div class="mx-auto grid gap-8 md:grid-cols-2 lg:grid-cols-3 max-w-6xl">
          {projects.map(p => (
            <div class="project-card">
              <h3 class="text-lg font-semibold mb-2 text-white">{p.title}</h3>
              <p class="text-gray-400 mb-4 leading-snug">{p.description}</p>
              <div class="h-2 bg-white bg-opacity-10 rounded-full overflow-hidden mb-2">
                <div class="h-full bg-white" style={`width:${p.progress}%`}></div>
              </div>
              <span class="text-sm text-gray-500">Progress: {p.progress}%</span>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Contact CTA -->
    <section id="contact" class="bg-black text-white py-12 sm:py-16 md:py-20 px-4 sm:px-6 lg:px-8">
      <div class="max-w-xl mx-auto text-center">
        <h2 class="text-2xl sm:text-3xl md:text-4xl font-bold mb-4">Visualizing Knowledge, Amplifying Thought</h2>
        <p class="text-gray-400 leading-relaxed mb-6 text-sm sm:text-base md:text-lg">
          Visualizing knowledge in Obsidian.<br />
          知を可視化し、PKMの本質を探る。<br /><br />
          LLMs、多層レイヤー、思考発話駆動思考。<br />
          PythonとTypeScriptを軸に、知の進化を設計します。
        </p>
        <a href="https://x.com/Mekann2904" target="_blank" rel="noopener noreferrer"
           class="btn-primary inline-flex items-center justify-center text-base sm:text-lg py-2 sm:py-3 px-6 sm:px-8">
          Follow on&nbsp;<span class="text-2xl sm:text-3xl md:text-4xl">𝕏</span>
        </a>
      </div>
    </section>
  </main>

  <!-- グラフスクリプト -->
  <script type="module" is:inline>
    import * as d3 from 'https://cdn.jsdelivr.net/npm/d3@7/+esm';

    const container   = document.getElementById('network');
    const reloadBtn   = document.getElementById('reload-btn');
    const toggleBtn   = document.getElementById('toggle-btn');
    const iconMax     = document.getElementById('icon-max');
    const iconMin     = document.getElementById('icon-min');

    let svg, sim;   // グローバル保持（リロードで再生成）
    let isFull = false;

    /* 描画関数 -------------------------------------------------- */
    async function buildGraph() {
      const { nodes, links } = await fetch('/graph.json').then(r => r.json());
      const W = container.clientWidth, H = container.clientHeight;

      svg = d3.select(container)
              .append('svg')
              .attr('width', W)
              .attr('height', H)
              .call(
                d3.zoom()
                  .scaleExtent([0.4, 5])
                  .on('zoom', ({ transform }) => inner.attr('transform', transform))
              );

      const inner = svg.append('g');

      const link = inner.append('g')
        .attr('stroke', '#444').attr('stroke-opacity', 0.4)
        .selectAll('line')
        .data(links)
        .join('line')
        .attr('stroke-width', 1);

      const node = inner.append('g')
        .selectAll('g')
        .data(nodes)
        .join('g');

      node.append('circle')
        .attr('r', d => (d.ext ? 8 : 6))
        .attr('fill', d => (d.ext ? '#ff9b00' : '#fff'))
        .attr('stroke', '#fff')
        .attr('stroke-width', d => (d.ext ? 2 : 1))
        .on('click', (_, d) => { if (!d.ext) location.href = d.id; });

      node.append('text')
        .text(d => d.label)
        .attr('x', 10)
        .attr('y', 4)
        .attr('fill', '#fff')
        .attr('font-size', '10px')
        .style('pointer-events', 'none')
        .style('text-shadow', '0 0 4px rgba(0,0,0,0.8)');

      sim = d3.forceSimulation(nodes)
        .force('link', d3.forceLink(links).id(d => d.id).distance(120))
        .force('charge', d3.forceManyBody().strength(-400))
        .force('collide', d3.forceCollide().radius(d => (d.ext ? 8 : 6) + 14))
        .force('center', d3.forceCenter(W / 2, H / 2))
        .alpha(1).alphaDecay(0.04)
        .on('tick', () => {
          link
            .attr('x1', d => d.source.x).attr('y1', d => d.source.y)
            .attr('x2', d => d.target.x).attr('y2', d => d.target.y);
          node.attr('transform', d => `translate(${d.x},${d.y})`);
        });

      node.call(
        d3.drag()
          .on('start', (e, d) => { if (!e.active) sim.alphaTarget(0.3).restart(); d.fx = d.x; d.fy = d.y; })
          .on('drag',  (e, d) => { d.fx = e.x; d.fy = e.y; })
          .on('end',   (e, d) => { if (!e.active) sim.alphaTarget(0); d.fx = d.fy = null; })
      );
    }

    /* 画面サイズに合わせて再配置 */
    function resizeGraph() {
      const w = container.clientWidth, h = container.clientHeight;
      svg.attr('width', w).attr('height', h);
      sim.force('center', d3.forceCenter(w / 2, h / 2)).alpha(0.3).restart();
    }

    /* リロード処理 */
    async function reloadGraph() {
      container.innerHTML = '';
      await buildGraph();
    }

    /* フルスクリーン切替 */
    function toggleFullscreen() {
      isFull = !isFull;
      iconMax.classList.toggle('hidden', isFull);
      iconMin.classList.toggle('hidden', !isFull);

      container.classList.toggle('!fixed',   isFull);
      container.classList.toggle('!inset-0', isFull);
      container.classList.toggle('!z-50',    isFull);
      document.body.classList.toggle('overflow-hidden', isFull);

      resizeGraph();
    }

    /* 初期化 */
    await reloadGraph();

    /* イベント */
    reloadBtn.addEventListener('click', () => reloadGraph());
    toggleBtn.addEventListener('click', () => toggleFullscreen());
    window.addEventListener('resize', () => resizeGraph(), { passive: true });
  </script>

  <!-- Tailwind / Utility Styles -->
  <style>
    html, body { background:#000; }
    section[id] { scroll-margin-top:5rem; }
    .btn-primary   { @apply bg-white text-black rounded-md px-6 py-3 font-medium hover:opacity-90 transition; }
    .btn-secondary { @apply border border-white text-white rounded-md px-6 py-3 font-medium hover:bg-white hover:text-black transition; }
    .project-card  { @apply bg-white bg-opacity-5 border border-white border-opacity-10 rounded-xl p-6 hover:bg-opacity-10 backdrop-blur-sm transition; }
    .skill-cloud   { @apply w-full h-full bg-gray-900 border border-gray-700 rounded-lg overflow-visible; }
    .community-card{ @apply bg-gray-800 border border-gray-700 rounded-2xl p-6 flex items-start gap-4; }
    .icon-btn      { @apply w-8 h-8 flex items-center justify-center bg-white bg-opacity-20 hover:bg-opacity-30 text-white rounded-full transition; }
  </style>
</BaseLayout>
