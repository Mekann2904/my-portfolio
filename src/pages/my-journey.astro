---
import BaseLayout from "../layouts/BaseLayout.astro";
export interface RoadmapItem {
  quarter: string;
  detail: string;
}
export const roadmapItems: RoadmapItem[] = [
  { quarter: "2025年 4月", detail: "サイト公開" },
];
---

<BaseLayout>
  <style>
    :root {
      --bg: #08090a;
      --line: rgba(230, 230, 250, 0.4);
      --text: #e6e6fa;
    }

    html, body {
      margin: 0;
      padding: 0;
      width: 100%;
      min-height: 100vh;
      background: var(--bg);
      color: var(--text);
      font-family: "Inter", sans-serif;
    }

    .page-wrapper {
      display: flex;
      flex-direction: column;
      min-height: 100vh;
    }

    /* コンテンツ領域 */
    #container {
      position: relative;
      display: flex;
      justify-content: center;  /* 横中央 */
      align-items: flex-start;  /* 上寄せ */
      flex: 1;                  /* footer を下に押し下げ */
      padding: 2rem;
      box-sizing: border-box;
    }

    canvas#particle-bg {
      position: absolute;
      inset: 0;
      z-index: 0;
    }

    /* ロードマップの幅を拡大・中央寄せ */
    .roadmap-container {
      position: relative;
      width: 80vw;
      max-width: 800px;
      margin: 0 auto;
      z-index: 1;
    }

    .roadmap-title {
      font-size: 2.25rem;
      margin: 0 0 1rem;
      line-height: 1.3;
      font-weight: 600;
      text-align: center;
    }

    .timeline {
      list-style: none;
      margin: 0;
      padding: 0;
      position: relative;
    }

    /* 縦線 */
    .timeline::before {
      content: "";
      position: absolute;
      top: 0;
      bottom: 0;
      left: 1rem;
      width: 2px;
      background: var(--line);
    }

    .timeline-item {
      position: relative;
      margin-bottom: 2rem;
      padding-left: 2rem;
      transition: transform 0.3s;
    }

    .timeline-item:hover {
      transform: translateX(5px) scale(1.02);
    }

    .timeline-item .content {
      padding: 0.75rem 1rem;
      border: 1px solid var(--line);
      border-radius: 8px;
      background: none;
      color: var(--text);
      font-size: 1rem;
      line-height: 1.5;
      opacity: 0;
      transform: translateY(30px);
    }

    /* フッター */
    footer.footer {
      flex-shrink: 0;
      text-align: center;
      padding: 1rem 0;
      font-size: 0.875rem;
      background: transparent;
    }
  </style>

  <div class="page-wrapper">
    <div id="container">
      <canvas id="particle-bg"></canvas>
      <div class="roadmap-container">
        <h1 class="roadmap-title">My Journey</h1>
        <ul class="timeline">
          {roadmapItems.map((item) => (
            <li class="timeline-item">
              <div class="content">
                <strong>{item.quarter}</strong><br />
                {item.detail}
              </div>
            </li>
          ))}
        </ul>
      </div>
    </div>
  </div>

  <script is:inline type="module">
    import anime from 'https://cdn.jsdelivr.net/npm/animejs@3.2.1/lib/anime.es.js';

    // Particle background
    const canvas = document.getElementById('particle-bg');
    const ctx = canvas.getContext('2d');
    let W = canvas.width = window.innerWidth;
    let H = canvas.height = window.innerHeight;
    const particles = Array.from({ length: 200 }).map(() => ({
      x: Math.random() * W,
      y: Math.random() * H,
      r: Math.random() * 1.5 + 0.5,
      dx: (Math.random() - 0.5) * 0.3,
      dy: (Math.random() - 0.5) * 0.3,
      alpha: Math.random() * 0.5 + 0.1,
    }));

    function drawParticles() {
      ctx.clearRect(0, 0, W, H);
      particles.forEach((p) => {
        p.x += p.dx;
        p.y += p.dy;
        if (p.x < 0 || p.x > W) p.dx *= -1;
        if (p.y < 0 || p.y > H) p.dy *= -1;
        ctx.globalAlpha = p.alpha;
        ctx.beginPath();
        ctx.arc(p.x, p.y, p.r, 0, 2 * Math.PI);
        ctx.fillStyle = '#fff';
        ctx.fill();
      });
      requestAnimationFrame(drawParticles);
    }
    drawParticles();
    window.addEventListener('resize', () => {
      W = canvas.width = window.innerWidth;
      H = canvas.height = window.innerHeight;
    });

    // Timeline animation
    anime.timeline({ loop: false }).add({
      targets: '.timeline-item .content',
      opacity: [0, 1],
      translateY: [30, 0],
      easing: 'easeOutQuad',
      delay: anime.stagger(200, { start: 300 }),
    });
  </script>
</BaseLayout>
