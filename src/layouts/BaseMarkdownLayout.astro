---
// src/layouts/BaseMarkdownLayout.astro

import '../styles/global.pcss';
/// <reference types="astro/client" />

const rawProps = (Astro.props as any).frontmatter ?? Astro.props;
const { title, description, author, tags, date, pubDate } = rawProps as {
  title: string;
  description?: string;
  author?: string;
  tags?: string[];
  date?: string | Date;
  pubDate?: string;
};

let sourceDate: string | Date | undefined = date ?? pubDate;
let parsedDate: Date | null = null;
let isoDate = '';
if (typeof sourceDate === 'string') {
  parsedDate = new Date(sourceDate);
  isoDate = sourceDate;
} else if (sourceDate instanceof Date) {
  parsedDate = sourceDate;
  isoDate = parsedDate.toISOString();
}
const validDate = parsedDate instanceof Date && !isNaN(parsedDate.valueOf());
const displayDate = validDate
  ? parsedDate!.toLocaleDateString('ja-JP', { year: 'numeric', month: '2-digit', day: '2-digit' })
  : '';
---
<html lang="ja" class="bg-black">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    {description && <meta name="description" content={description} />}
  </head>
  <body class="bg-black text-white">
    <header class="fixed inset-x-0 top-0 z-50 bg-black border-b border-gray-800">
      <nav class="container mx-auto flex items-center justify-between py-4 px-6">
        <a href="/" class="text-white font-semibold text-lg">Mekann</a>
        <ul class="flex gap-6 text-sm">
          <li><a href="/" class="text-gray-400 hover:text-white">Home</a></li>
          <li><a href="/blog" class="text-gray-400 hover:text-white">Blog</a></li>
        </ul>
      </nav>
    </header>

    <main class="pt-20 container mx-auto px-6 py-8">
      <article class="prose prose-invert mx-auto max-w-3xl py-8 relative
        prose-pre:bg-[rgb(40_40_40)] prose-pre:text-gray-100 prose-pre:p-4 prose-pre:rounded-lg prose-pre:overflow-auto prose-pre:my-6
        prose-code:bg-transparent prose-code:text-inherit">
        
        <a href="/blog/" class="inline-flex items-center text-gray-500 hover:text-white mb-4">
          ← Back to Blog
        </a>

        {validDate && (
          <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between text-sm text-gray-500 mb-4">
            <time datetime={isoDate}>{displayDate}</time>
            {author && <span>By {author}</span>}
          </div>
        )}

        <h1 class="text-4xl font-bold text-white mb-6">{title}</h1>

        {description && <p class="text-gray-300 mb-8">{description}</p>}

        <slot />

        {tags && tags.length > 0 && (
          <div class="mt-12 border-t border-gray-700 pt-6 flex flex-wrap gap-2">
            {tags.map(tag => (
              <a href={`/tags/${tag}`} class="text-blue-300 hover:underline text-sm">#{tag}</a>
            ))}
          </div>
        )}
      </article>
    </main>

    <footer class="bg-black text-gray-400 border-t border-gray-800 py-6">
      <div class="container mx-auto text-center text-sm">
        © {new Date().getFullYear()} Mekann
      </div>
    </footer>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('article.prose pre').forEach(pre => {
          const code = pre.querySelector('code');
          if (!code) return;
          const btn = document.createElement('button');
          btn.textContent = 'Copy';
          btn.className = 'absolute top-2 right-2 bg-gray-700 text-gray-200 text-xs px-2 py-1 rounded hover:bg-gray-600';
          btn.addEventListener('click', () => {
            navigator.clipboard.writeText(code.textContent || '');
            btn.textContent = 'Copied';
            setTimeout(() => (btn.textContent = 'Copy'), 1500);
          });
          (pre as HTMLElement).style.position = 'relative';
          pre.appendChild(btn);
        });
      });
    </script>
  </body>
</html>
